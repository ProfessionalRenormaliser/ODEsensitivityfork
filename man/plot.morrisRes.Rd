% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.morrisRes}
\alias{plot.morrisRes}
\title{Plotting the results of Morris SA - and bla}
\usage{
\method{plot}{morrisRes}(res, type, ...)
}
\arguments{
\item{res}{resulting ranking of class \code{morrisres}.}

\item{type}{plot type, choose between \code{sep} and \code{trajec}.}

\item{...}{additional arguments.}
}
\description{
\code{plot} plots the results of Morris SA.
}
\details{
\code{plot} with \code{type = "sep"} plots mu.star and
  sigma seperately versus time.

\code{plot} with \code{type = "trajec"} plots mu.star versus
  sigma for every point of time.
}
\examples{
# Modell aufstellen fuer die DGL y'(t) = alpha * y(t):
dglFun <- function(X, my.t) {
  exp(X[, 1] * my.t) + X[, 2] * my.t
  ## exp(X[, 1] * my.t)            # natuerlich die wahre Lsg.
}

# Fuehre fuer diesen einfachen Fall eine SA zu verschiedenen Zeitpunkten
# durch:
t.vec <- 0:10
xFun <- function(my.t) {
  morris(model = dglFun, factors = 2, r = 100, my.t = my.t,
         design = list(type = "oat", levels = 100, grid.jump = 1))
}
oneRun <- function(xFun, my.t) {
  x <- xFun(my.t)
  # analog zur Hilfeseite von morris()/ hoestgradig primitiv:
  k <- ncol(x$ee)
  mu <- mu.star <- sigma <- numeric(k)
  for(i in 1:k) {
    mu[i]      <- mean(x$ee[, i])
    mu.star[i] <- mean(abs(x$ee[, i]))
    sigma[i]   <- sd(x$ee[, i])
  }
  # Ergebnisse:
  res <- c(my.t, mu, mu.star, sigma)
  names(res) <- c("time",
                  paste("mu", 1:k, sep = ""),
                  paste("mu.star", 1:k, sep = ""),
                  paste("sigma", 1:k, sep = ""))
  return(res)
}
set.seed(2015)
res <- setClasses(sapply(t.vec, oneRun, xFun = xFun), "morrisRes")

# Plots:
plot(res, type = "sep")
plot(res, type = "trajec")
}
\author{
Stefan Theers
}
\seealso{
\link[sensitivity]{morris}
}

