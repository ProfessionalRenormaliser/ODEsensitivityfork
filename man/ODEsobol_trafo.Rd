% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ODEsobol_trafo.R
\name{ODEsobol_trafo}
\alias{ODEsobol_trafo}
\title{Sobol' SA for ODEs}
\usage{
ODEsobol_trafo(mod, pars, yini, times, ode_method = "lsoda", seed = 2015,
  n = 1000, rfuncs = rep("runif", length(pars)),
  rargs = rep("min = 0, max = 1", length(pars)), method = "martinez",
  nboot = 0, trafo = function(Y) rowSums(Y^2), ncores = 1)
}
\arguments{
\item{mod}{[\code{function(Time, State, Pars)}]\cr
model to examine, cf. example below.}

\item{pars}{[\code{character(k)}]\cr
vector of \code{k} input variable names.}

\item{yini}{[\code{numeric(z)}]\cr
vector of \code{z} initial values.}

\item{times}{[\code{numeric}]\cr
points of time at which the SA should be executed
(vector of arbitrary length). Also the
first point of time must be positive.}

\item{ode_method}{[\code{character(1)}]\cr
method to be used for solving the differential equations, see 
\code{\link[deSolve]{ode}}. Defaults to \code{"lsoda"}.}

\item{seed}{[\code{numeric(1)}]\cr
seed.}

\item{n}{[\code{integer(1)}]\cr
number of random parameter values (\code{n} per input factor) used to 
estimate the variance-based sensitivity indices by Monte-Carlo-method.
(Variance-based methods for sensitivity analysis rely on 
Monte-Carlo-simulation to estimate the integrals needed for the calculation
of the sensitivity indices.) Defaults to 1000.}

\item{rfuncs}{[\code{character(k)}]\cr
names of the \code{k} functions used to generate the \code{n} random values
for the \code{k} parameters. This way, different distributions can be 
used for the \code{k} parameters. Defaults to \code{"runif"} for each of
the \code{k} parameters.}

\item{rargs}{[\code{character(k)}]\cr
arguments to be passed to the \code{k} functions of \code{rfuncs}. Each 
element of \code{rargs} has to be a string of type \code{"tag1 = value1, 
tag2 = value2, ..."}. By default, \code{min = 0} and \code{max = 1} are 
used for each of the \code{k} \code{runif}'s, meaning a uniform 
distribution of all parameters on [0, 1].}

\item{method}{[\code{character(1)}]\cr
either \code{"jansen"} or \code{"martinez"}, specifying which modification
of the variance-based Sobol' method shall be used. Defaults to 
\code{"martinez"}, which is slightly faster than \code{"jansen"}.}

\item{nboot}{[\code{integer(1)}]\cr
parameter \code{nboot} used in \code{\link{soboljansen}} resp.
\code{\link{sobolmartinez}},
i.e. the number of bootstrap replicates. Defaults to 0, so no bootstrapping
is done.}

\item{trafo}{[\code{function}]\cr
function to transform \code{z > 1} output variables to
IR [only needed, if \code{z > 1}]. Must be able to deal with a
matrix.}

\item{ncores}{[\code{integer(1)}]\cr
number of processor cores to be used for calculating the sensitivity
indices. Must be between 1 and 4.}
}
\value{
List of Sobol' SA results (i.e. 1st order sensitivity indices
  \code{S} and total sensitivity indices \code{T}) for every point of
  time of the \code{times} vector, of class \code{sobolRes_trafo}.
}
\description{
\code{ODEsobol_trafo} performs a sensitivity analysis for ordinary 
differential equations using the variance-based Sobol' method. Unlike the
other implementations, it supports transformations of the adapted 
\code{\link[deSolve]{ode}}-results used for 
\code{\link[sensitivity]{soboljansen}} or 
\code{\link[sensitivity]{sobolmartinez}}.
}
\note{
\code{ODEsobol_trafo} uses the original 
  \code{\link[sensitivity]{soboljansen}}- or 
  \code{\link[sensitivity]{sobolmartinez}}-function which means a 
  transformation has to be applied to the adapted 
  \code{\link[deSolve]{ode}}-results used for these functions (e.g. choosing 
  only one output variable), so that this adapted model function returns a 
  vector. This also means that only one timepoint can be analyzed per 
  execution of
  \code{\link[sensitivity]{soboljansen}} or
  \code{\link[sensitivity]{sobolmartinez}}. Therefore, a parallelization has
  to be made which results (in general) in \code{ODEsobol_trafo} being very 
  slow. Because of the parallelization, package \code{parallel} is needed 
  for this function to work. However, the use of \code{\link{ODEsobol_ats}} 
  (for one output variable) or \code{\link{ODEsobol_aos}} (for multiple 
  output variables) is recommended if no transformation has to be made to the 
  \code{\link[deSolve]{ode}}-results.
  
  Sometimes, it is also helpful to try another ODE-solver (argument 
  \code{ode_method}). Problems are known for the
  \code{ode_method}s \code{"euler"}, \code{"rk4"} and \code{"ode45"}. 
  In contrast, the \code{ode_method}s \code{"vode"}, \code{"bdf"}, 
  \code{"bdf_d"}, \code{"adams"}, \code{"impAdams"} and \code{"impAdams_d"} 
  might be even faster than the standard \code{ode_method} \code{"lsoda"}.
}
\examples{
##### FitzHugh-Nagumo equations (Ramsay et al., 2007)
# definition of the model itself, parameters, initial values
# and the times vector:

}
\author{
Stefan Theers
}
\references{
J. O. Ramsay, G. Hooker, D. Campbell and J. Cao, 2007,
  \emph{Parameter estimation for differential equations: a generalized 
  smoothing approach}, Journal of the Royal Statistical Society, Series B, 
  69, Part 5, 741--796.
}
\seealso{
\code{\link[sensitivity]{soboljansen},
\link[sensitivity]{sobolmartinez}, \link{ODEsobol_ats}, \link{ODEsobol_aos},
\link{plot.sobolRes_trafo}}
}

