% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ODEmorris.ODEnetwork.R
\name{ODEmorris.ODEnetwork}
\alias{ODEmorris.ODEnetwork}
\title{Morris Screening for Objects of Class \code{ODEnetwork}}
\usage{
\method{ODEmorris}{ODEnetwork}(mod, pars, times, binf = 0, bsup = 1,
  r = 500, design = list(type = "oat", levels = 10, grid.jump = 1),
  scale = TRUE, ode_method = "lsoda", parallel_eval = FALSE,
  parallel_eval_ncores = NA, ...)
}
\arguments{
\item{mod}{[\code{ODEnetwork}]\cr
list of class \code{ODEnetwork}.}

\item{pars}{[\code{character(k)}]\cr
vector of \code{k} input variable names. All parameters must be 
contained in \code{names(ODEnetwork::createParamVec(mod))} and must not
be derivable from other parameters supplied (e.g., \code{"k.2.1"} can be 
derived from \code{"k.1.2"}, so supplying \code{"k.1.2"} suffices).}

\item{times}{[\code{numeric}]\cr
points of time at which the SA should be executed (vector of arbitrary 
length). The first point of time must be greater than zero.}

\item{binf}{[\code{character(1} or \code{k)}]\cr
vector of lower borders of possible values for the \code{k} input 
parameters. If they are all equal, a single value can be set.}

\item{bsup}{[\code{character(1} or \code{k)}]\cr
vector of upper borders of possible values for the \code{k} input 
parameters. If they are all equal, a single value can be set.}

\item{r}{[\code{integer(1)}]\cr
if of length 1, the number of repetitions of the \code{design}. If of 
length 2, a space-filling optimization of the sampling design is used, see 
\code{\link[sensitivity]{morris}}. However, this space-filling optimization
might lead to long runtimes, so length 1 is recommended for \code{r}. 
Defaults to 500.}

\item{design}{[\code{list}]\cr
a list specifying the design type and its parameters,
cf. \code{\link[sensitivity]{morris}}.}

\item{scale}{[\code{logical(1)}]\cr
if \code{TRUE}, scaling is done for the input design of experiments after 
building the design and before calculating the elementary effects,
cf. \code{\link[sensitivity]{morris}}. Defaults to \code{TRUE}, which is
highly recommended if the factors have different orders of magnitude, see
\code{\link[sensitivity]{morris}}.}

\item{ode_method}{[\code{character(1)}]\cr
method to be used for solving the ODEs in situations where the solution has
to be determined numerically, see \code{\link[deSolve]{ode}} for details.
Defaults to \code{"lsoda"}.}

\item{parallel_eval}{[\code{logical(1)}]\cr
logical indicating if the evaluation of the ODE model shall be performed
parallelized.}

\item{parallel_eval_ncores}{[\code{integer(1)}]\cr
number of processor cores to be used for parallelization. Only applies if
\code{parallel_eval = TRUE}. If set to \code{NA} (as per default) and 
\code{parallel_eval = TRUE}, 1 processor core is used.}

\item{...}{further arguments passed to or from other methods.}
}
\value{
List of class \code{ODEmorris} of length \code{2 * nrow(mod$state)} 
  containing in each element a matrix for one state variable (all components 
  of the 2 state variables are analyzed independently). The matrices 
  themselves contain the Morris's SA results for all timepoints (rows: 
  \code{mu, mu.star} and \code{sigma} for every parameter; columns: 
  timepoints).
}
\description{
\code{ODEmorris.ODEnetwork} performs a sensitivity analysis for objects of 
class \code{ODEnetwork} using the Morris screening method.
Package \code{ODEnetwork} is required for this function to work.
}
\details{
If the object of class \code{ODEnetwork} supplied for \code{mod} doesn't
  include any events, the solution of the ODE network is determined 
  analytically using \code{\link[ODEnetwork]{simuNetwork}}. In the presence
  of events, \code{\link[ODEnetwork]{simuNetwork}} uses 
  \code{\link[deSolve]{ode}} to solve the ODE network numerically.
  
  The sensitivity analysis is done for all state variables and all
  timepoints simultaneously using \code{\link[sensitivity]{morris}} from the 
  package \code{sensitivity}.
  
  For non-ODE models, values for \code{r} are typically between 10 and 50.
  However, much higher values are recommended for ODE models (the default is
  \code{r = 500}).
}
\note{
In situations where the solution of the ODE model has to be determined 
  numerically, \code{NA}s might occur in the Morris sensitivity results
  if unrealistic parameter combinations are sampled by 
  \code{\link[sensitivity]{morris}}. If this is the case, please make use of 
  \code{\link{ODEsobol.ODEnetwork}} instead or restrict the intervals for the
  input parameter values usefully using \code{binf}, \code{bsup} and 
  \code{scale = TRUE}. If the simulation of the model takes too long, it 
  might be helpful to try another ODE-solver (argument \code{ode_method}). 
  The \code{ode_method}s \code{"vode"}, \code{"bdf"}, \code{"bdf_d"}, 
  \code{"adams"}, \code{"impAdams"} and \code{"impAdams_d"} might be faster 
  than the default \code{ode_method} \code{"lsoda"}.
  
  If \code{\link[sensitivity]{morris}} throws a warning message stating
  "In ... keeping ... repetitions out of ...", try using a bigger number of 
  \code{levels} in the \code{design} argument.
}
\examples{
##### A network of ordinary differential equations #####
# Definition of the network using the package "ODEnetwork":
library(ODEnetwork)
masses <- c(1, 1)
dampers <- diag(c(1, 1))
springs <- diag(c(1, 1))
springs[1, 2] <- 1
distances <- diag(c(0, 2))
distances[1, 2] <- 1
lfonet <- ODEnetwork(masses, dampers, springs, 
                     cartesian = TRUE, distances = distances)
lfonet <- setState(lfonet, c(0.5, 1), c(0, 0))
LFOpars <- c("k.1", "k.2", "k.1.2")
LFOtimes <- seq(0.01, 20, by = 0.1)
LFObinf <- rep(0.001, 3)
LFObsup <- c(6, 6, 3)

set.seed(4628)
LFOres <- ODEmorris(lfonet,
                    LFOpars,
                    LFOtimes,
                    binf = LFObinf,
                    bsup = LFObsup,
                    r = 50,
                    design = list(type = "oat", levels = 100, grid.jump = 1),
                    scale = TRUE,
                    ode_method = "adams",
                    parallel_eval = TRUE,
                    parallel_eval_ncores = 2)

}
\author{
Frank Weber
}
\seealso{
\code{\link[sensitivity]{morris}, \link{plot.ODEmorris}}
}

